# Generated by Django 3.2.9 on 2022-06-04 01:39

from django.db import migrations, models
import django.db.models.deletion
import face.models
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FaceAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='unknown', help_text='请对该人脸进行命名', max_length=20, null=True, verbose_name='人脸名')),
                ('face_feat', models.FileField(blank=True, help_text='已识别的人脸特征路径', null=True, upload_to=face.models.face_info_directory_path, verbose_name='人脸特征')),
                ('is_has_feat', models.BooleanField(blank=True, default=False, help_text='是否有人脸特征', verbose_name='是否有人脸特征')),
                ('avatar', models.ImageField(blank=True, default='sys_img/logo_lg.png', help_text='人脸相册封面', null=True, upload_to=face.models.face_directory_path, verbose_name='人脸相册封面')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='face.facealbum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Face',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='unknown', help_text='请对该人脸进行命名', max_length=20, null=True, verbose_name='人脸名')),
                ('is_confirmed', models.BooleanField(blank=True, default=False, help_text='请对人脸名字进行确认', verbose_name='人脸是否已确认')),
                ('det_score', models.FloatField(blank=True, help_text='是人脸的概率', null=True, verbose_name='是人脸的概率')),
                ('face_score', models.FloatField(blank=True, help_text='是这个人的概率', null=True, verbose_name='是这个人的概率')),
                ('age', models.IntegerField(blank=True, help_text='人脸的年龄，用于训练', null=True, verbose_name='人脸的年龄，用于训练')),
                ('gender', models.SmallIntegerField(choices=[(0, '男'), (1, '女'), (2, '保密')], default=2, help_text='0:男，1：女, 2： 保密', verbose_name='性别')),
                ('face_info', models.FileField(blank=True, help_text='已识别的人脸路径', null=True, upload_to=face.models.face_info_directory_path, verbose_name='人脸属性')),
                ('face_img', models.ImageField(blank=True, default='sys_img/logo_lg.png', help_text='请选择需要上传的人脸', null=True, upload_to=face.models.face_directory_path, verbose_name='人脸路径')),
                ('x', models.IntegerField(blank=True, help_text='人脸左上角x坐标', null=True, verbose_name='左上角x坐标')),
                ('y', models.IntegerField(blank=True, help_text='人脸左上角y坐标', null=True, verbose_name='左上角y坐标')),
                ('wid', models.IntegerField(blank=True, help_text='人脸宽度', null=True, verbose_name='宽度')),
                ('height', models.IntegerField(blank=True, help_text='人脸高度', null=True, verbose_name='高度')),
                ('det_method', models.SmallIntegerField(blank=True, choices=[(0, 'Lightroom'), (1, 'InsightFace'), (2, 'Others')], default=0, help_text='人脸检测方法', null=True, verbose_name='检测方法')),
                ('state', models.SmallIntegerField(blank=True, choices=[(0, '正常'), (1, '禁用'), (9, '已经删除')], default=0, help_text='0:正常，1：禁用, 9: 已经删除', null=True, verbose_name='人脸状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='指定其在创建数据时将默认写入当前的时间', verbose_name='首次创建的时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='指定每次数据更新时自动写入当前时间', verbose_name='最后更新的时间')),
                ('face_album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faces', to='face.facealbum', verbose_name='所属人脸相册')),
            ],
            options={
                'ordering': ('-created_at',),
                'get_latest_by': 'face_img',
            },
        ),
    ]
