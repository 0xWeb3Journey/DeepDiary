# Generated by Django 3.2.9 on 2022-06-04 01:39

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
import user_info.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='公司名称', max_length=30, verbose_name='公司名称')),
                ('addr', models.CharField(blank=True, help_text='公司地址', max_length=50, verbose_name='公司地址')),
                ('desc', models.TextField(blank=True, help_text='公司描述', verbose_name='公司描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='首次创建的时间', verbose_name='首次创建的时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='最后更新的时间', verbose_name='最后更新的时间')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text="可以在这里给公司打上关键字，用','隔开", through='taggit.TaggedItem', to='taggit.Tag', verbose_name='公司标签')),
            ],
            options={
                'ordering': ('-created_at',),
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(help_text='真实姓名', max_length=30, verbose_name='真实姓名')),
                ('tel', models.CharField(blank=True, help_text='用户手机号码', max_length=20, verbose_name='电话号码')),
                ('position', models.SmallIntegerField(blank=True, choices=[(0, '项目经理'), (1, '项目'), (2, '质量'), (3, '商务'), (4, '车间'), (5, '工艺'), (6, '模具'), (7, '采购'), (8, '物流'), (9, 'DRE'), (10, 'SQE'), (11, '其它')], default=9, help_text='请选择该员工岗位', null=True, verbose_name='岗位')),
                ('avatar', models.ImageField(blank=True, default='sys_img/logo_lg.png', help_text='请上传头像', null=True, upload_to=user_info.models.user_directory_path, verbose_name='头像')),
                ('introduction', models.TextField(blank=True, help_text='个人魅力简述', max_length=500, verbose_name='自我简介')),
                ('roles', models.SmallIntegerField(blank=True, choices=[(0, 'admin'), (1, 'editor'), (2, 'readonly'), (3, 'custom'), (4, 'employee'), (5, 'supplier')], default=4, help_text='用户角色', null=True, verbose_name='角色')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(0, '保密'), (1, '男'), (2, '女')], default=0, help_text='0:保密，1：男, 2： 女', verbose_name='性别')),
                ('birthday', models.DateField(blank=True, default=datetime.datetime.now, help_text='用户生日', verbose_name='用户生日')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='首次创建的时间', verbose_name='首次创建的时间')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='最后更新的时间', verbose_name='最后更新的时间')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='user_info.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-created_at',),
                'get_latest_by': 'id',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
